<?xml version="1.0" encoding="utf-8"?>
<android.support.percent.PercentRelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="88dp"
        android:background="@drawable/background">

        <FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <ImageView
                android:id="@+id/imgBackArrow"
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:layout_gravity="left|center_vertical"
                android:layout_marginLeft="16dp"
                android:src="@drawable/back_arrow" />

            <ImageView
                android:id="@+id/imgLogo"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center|bottom"
                android:layout_marginBottom="16dp"

                />

        </FrameLayout>

    </android.support.v7.widget.Toolbar>
    <!-- View that will be hidden when video goes fullscreen -->
    <RelativeLayout
        android:id="@+id/nonVideoLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="88dp">

        <com.zelering.AdReader.lib.VideoEnabledWebView
            android:id="@+id/webView"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />

    </RelativeLayout>

    <!-- View where the video will be shown when video goes fullscreen -->
    <RelativeLayout
        android:id="@+id/videoLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!-- View that will be shown while the fullscreen video loads. For example you could include
        a "Loading..." message. However, in this particular example this view is actually defined in
        view_loading_video.xml and inflated programmatically in ExampleActivity.java. The reason for
        this is to keep the main layout (this file) cleaner. -->
        <!-- <View
            android:id="@+id/videoLoading"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerInParent="true"
            android:visibility="invisible" /> -->

    </RelativeLayout>

</android.support.percent.PercentRelativeLayout>